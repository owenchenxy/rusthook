parameters:
  # azure pipelines paramters
  job_name: rustfmt                
  job_displayName: Check formatting 
  job_dependsOn: []                 
  job_condition: true               
  job_continueOnError: false        
  job_post-steps: []             

  # global parameters
  rust: stable
  all: true
  check: true
  emit: ''                               
  backup: false                         
  config-path: ''
  edition: ''
  color: ''
  print-config: ''                       

jobs:
- job: ${{ parameters['job_name'] }}
  displayName: ${{ parameters['job_displayName'] }}
  condition: ${{ parameters['job_condition'] }}
  continueOnError: ${{ parameters['job_continueOnError'] }}
  dependsOn: ${{ parameters['job_dependsOn'] }}
  pool:
    vmImage: ubuntu-20.04
  variables:
    fmt_flags: ''
    rustfmt_flags: ''
  steps:
  - template: ../steps/install-rust.yml
    parameters:
      rustup_toolchain: ${{ parameters.rust }}
      components:
        - rustfmt

  - script: echo "##vso[task.setvariable variable=fmt_flags]$(fmt_flags) --all"
    enabled: ${{ parameters['all'] }}
    displayName: "format all packages (only usable in workspaces)"

  - script: echo "##vso[task.setvariable variable=rustfmt_flags]$(rustfmt_flags) --check"
    enabled: ${{ parameters['check'] }}
    displayName: "Run in 'check' mode."

  - script: echo "##vso[task.setvariable variable=rustfmt_flags]$(rustfmt_flags) --emit ${{ parameters['emit'] }}"
    enabled: ${{ ne(parameters['emit'], '')  }}
    displayName: "Set what data to emit and how to ${{ parameters['emit'] }}"

  - script: echo "##vso[task.setvariable variable=rustfmt_flags]$(rustfmt_flags) --backup"
    enabled: ${{ parameters['backup'] }}
    displayName: "Backup any modified files."

  - script: echo "##vso[task.setvariable variable=rustfmt_flags]$(rustfmt_flags) --config-path ${{ parameters['config-path'] }}"
    enabled: ${{ ne(parameters['config-path'], '')  }}
    displayName: "Path for the configuration file (rustfmt.toml) ${{ parameters['config-path'] }}"

  - script: echo "##vso[task.setvariable variable=rustfmt_flags]$(rustfmt_flags) --edition ${{ parameters['edition'] }}"
    enabled: ${{ ne(parameters['edition'], '')  }}
    displayName: "Set rust edition to: ${{ parameters['edition'] }}"

  - script: echo "##vso[task.setvariable variable=rustfmt_flags]$(rustfmt_flags) --color ${{ parameters['color'] }}"
    enabled: ${{ ne(parameters['color'], '')  }}
    displayName: "Use colored output ${{ parameters['color'] }}"

  - script: echo "##vso[task.setvariable variable=rustfmt_flags]$(rustfmt_flags) --print-config ${{ parameters['print-config'] }}"
    enabled: ${{ ne(parameters['print-config'], '')  }}
    displayName: "Dump config: ${{ parameters['color'] }}"

  - script: |
      cargo fmt $(fmt_flags) -- $(rustfmt_flags)
    displayName: Check formatting

  # Custom steps:
  - ${{ if parameters['job_post-steps'] }}:
    - ${{ parameters['job_post-steps'] }}

